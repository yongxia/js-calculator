{"version":3,"sources":["index.js"],"names":["MESSAGES","RESULT","CLEAR","INTIAL_STATE","messages","result","parser","Presentational","props","resetHandler","reset","clickHandler","e","addNewMessage","target","value","clickEqualsHandler","updateResult","bind","className","id","this","join","onClick","href","rel","class","React","Component","store","createStore","state","action","type","includes","message","test","substr","push","charAt","substring","parseFloat","length","parseInt","replace","endsWith","console","log","reducer","i","left","operator","splice","right","Math","round","reduce","total","num","devToolsEnhancer","Container","connect","dispatch","addMessage","CalculatorWrapper","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7263849c.chunk.js","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport './index.css';\nimport { connect, Provider } from 'react-redux'\n\n//Redux\nconst MESSAGES = 'MESSAGES',\n  RESULT = 'RESULT',\n  CLEAR = 'CLEAR';\n\nconst addMessage = message => ({\n  type: MESSAGES,\n  message\n});\n\nconst addResult = () => ({\n  type: RESULT\n});\n\nconst clear = () => ({\n  type: CLEAR\n});\n\nconst INTIAL_STATE = ({\n  messages: [], // store operators and numbers\n  result: 0,\n  parser: '' //--123+ parse to messages:['-', '-123'], parser: '+'\n});\n\n\nconst calculatorReducer = (state = INTIAL_STATE, action) => {\n  let messages = [...state.messages];\n  let parser = state.parser;\n  switch (action.type) {\n    case MESSAGES:\n      if (messages.includes('=')) return state; // clear AC to start with a new cacluation\n      parser += action.message;\n      //reset to last operator (case: +/* followed by any operator, or - followed by +*/)\n      if (/^[+/*][+/*-]/.test(parser) || /^-[+/*]/.test(parser)) {\n        parser = parser.substr(1);\n        //reset to last operator (case: -- foloweed by any operator)\n      } else if (/^--[+/*-]/.test(parser)) {\n        parser = parser.substr(2);\n        // hanlde multiple zeros in beging of a number, allow 0. for float\n      } else if (! /\\d+[+*/-]$/.test(parser)) {\n        if (/^[^1-9]+0+[1-9]$/.test(parser)) {\n          parser = parser.replace(/0+/, '');\n        } else if (/^[+*/-]+[^1-9]0+\\.$/.test(parser)) {\n          parser = parser.replace(/0+/, '0');\n        }\n        // only show one dot for float number\n        if (parser.endsWith('..')) {\n          parser = parser.replace('..', '.');\n        }\n        //meet condition for parsing, ends with at least one digit and an operator\n      } else {\n        //at the very beginng, there might not be an operator in parser\n        if (/^[+/*-]/.test(parser)) {\n          messages.push(parser.charAt(0));\n          parser = parser.substring(1); //consume operator, '--1.23+' => '-1.23+' , messages:['-']\n        }\n        //continue consume parser number part, messages: ['-',-1.23], parser: '+'\n        if (parser.includes('.')) {\n          messages.push(parseFloat(parser.substring(0, parser.length - 1)));\n        } else {\n          messages.push(parseInt(parser.substring(0, parser.length - 1)));\n        }\n        //update parser for next parse\n        parser = parser.substring(parser.length - 1);\n      }\n      return { ...state, messages: messages, parser: parser };\n    case RESULT:\n      if (messages.includes('=')) return state; // clear AC to start with a new cacluation\n      //consume remaining parser if any\n      if (/^[+*/-]/.test(parser)) {\n        messages.push(parser.charAt(0));\n        parser = parser.substring(1);\n        if (parser.length > 0) {\n          if (parser.includes('.')) {\n            messages.push(parseFloat(parser));\n          } else {\n            messages.push(parseInt(parser));\n          }\n          parser = '';\n        }\n      }\n      //calulate result Formula/Expression Logic\n      if (messages.length <= 1) return state;\n      if (/^[*/]/.test(messages[0])) return state; //click AC to fix the formular no left\n      console.log(messages);\n      let reducer = [...messages];\n      //TODO first order * or /\n      while (reducer.includes('*') || reducer.includes('/')) {\n        let i = 1;\n        while (i < reducer.length) {\n          if (/[*|/]/.test(reducer[i])) {\n            let left = reducer[i - 1];\n            let operator = reducer[i];\n            if (i + 1 === reducer.length) {\n              reducer.splice(i - 1, 2, left)\n              break;\n            } else {\n              let right = reducer[i + 1];\n              let result = operator === '*' ? Math.round(left * right * 10000) / 10000 : Math.round(left / right * 10000) / 10000;\n              reducer.splice(i - 1, 3, result)\n            }\n          }\n          i++;\n          console.log('reduced', reducer);\n        }\n      }\n      //TODO second order + or -\n      while (reducer.includes('+') || reducer.includes('-')) {\n        let i = 1;\n        while (i < reducer.length) {\n          if (/[+|-]/.test(reducer[i])) {\n            let left = reducer[i - 1];\n            let operator = reducer[i];\n            if (i + 1 === reducer.length) {\n              reducer.splice(i - 1, 2, left)\n              break;\n            } else {\n              let right = reducer[i + 1];\n              let result = operator === '+' ? Math.round((left + right) * 10000) / 10000 : Math.round((left - right) * 10000) / 10000;\n              reducer.splice(i - 1, 3, result)\n            }\n          }\n          i++;\n          console.log('reduced', reducer);\n        }\n      }\n      let result = reducer.reduce((total, num) => { total += num; return total; }, 0);\n      messages.push('=', result); // workaround, click AC to recalculator\n      parser = '';\n      return { ...state, messages: messages, parser: parser, result: result };\n    case CLEAR:\n      return INTIAL_STATE;\n    default:\n      return state;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages,\n    result: state.result,\n    parser: state.parser\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewMessage: message => { dispatch(addMessage(message)) },\n    updateResult: () => { dispatch(addResult()) },\n    reset: () => { dispatch(clear()) }\n  }\n}\n\n//React\nclass Presentational extends React.Component {\n  constructor(props) {\n    super(props);\n    this.resetHandler = this.resetHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.clickEqualsHandler = this.clickEqualsHandler.bind(this);\n  }\n\n  resetHandler = () => {\n    this.props.reset();\n  }\n\n  clickHandler = e => {\n    this.props.addNewMessage(e.target.value);\n  }\n\n  clickEqualsHandler = () => {\n    this.props.updateResult();\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <div className='box-group'>\n          <div className=\"screen\">\n            <div id=\"formula\">{this.props.messages.join(\"\") + this.props.parser}</div>\n            <div id=\"display\">{this.props.result}</div>\n          </div>\n          <button id=\"clear\" onClick={this.resetHandler}>AC</button>\n          <button id=\"divide\" onClick={this.clickHandler} value=\"/\">/</button>\n          <button id=\"multiply\" onClick={this.clickHandler} value=\"*\">*</button>\n\n          <button id=\"seven\" onClick={this.clickHandler} value=\"7\">7</button>\n          <button id=\"eight\" onClick={this.clickHandler} value=\"8\">8</button>\n          <button id=\"nine\" onClick={this.clickHandler} value=\"9\">9</button>\n          <button id=\"add\" onClick={this.clickHandler} value=\"+\">+</button>\n\n          <button id=\"four\" onClick={this.clickHandler} value=\"4\">4</button>\n          <button id=\"five\" onClick={this.clickHandler} value=\"5\">5</button>\n          <button id=\"six\" onClick={this.clickHandler} value=\"6\">6</button>\n          <button id=\"subtract\" onClick={this.clickHandler} value=\"-\">-</button>\n\n          <button id=\"one\" onClick={this.clickHandler} value=\"1\">1</button>\n          <button id=\"two\" onClick={this.clickHandler} value=\"2\">2</button>\n          <button id=\"three\" onClick={this.clickHandler} value=\"3\">3</button>\n\n          <button id=\"equals\" onClick={this.clickEqualsHandler}>=</button>\n          <button id=\"zero\" onClick={this.clickHandler} value=\"0\">0</button>\n          <button id=\"decimal\" onClick={this.clickHandler} value=\".\">.</button>\n        </div>\n        <p>Coded by Yong Xia <a href=\"https://github.com/yongxia/js-calculator\" target=\"_blank\" rel=\"noreferrer\"><i class=\"fa fa-github\"></i> Github</a></p>\n      </div>\n    )\n  }\n}\n\n//react-dedux\nconst store = createStore(calculatorReducer, devToolsEnhancer());\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Presentational);\n\nclass CalculatorWrapper extends React.Component {\n  render = () => (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  )\n}\n\nReactDOM.render(<CalculatorWrapper />, document.getElementById('root'))"],"sourceRoot":""}