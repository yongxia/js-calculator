{"version":3,"sources":["index.js"],"names":["MESSAGES","RESULT","CLEAR","INTIAL_STATE","messages","result","parser","Presentational","props","resetHandler","reset","clickHandler","e","addNewMessage","target","value","clickEqualsHandler","updateResult","bind","className","id","this","join","onClick","href","rel","React","Component","store","createStore","state","action","type","includes","message","test","substr","push","charAt","substring","parseFloat","length","parseInt","replace","match","unshift","console","log","reducer","i","left","operator","splice","right","Math","round","reduce","total","num","devToolsEnhancer","Container","connect","dispatch","addMessage","CalculatorWrapper","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f9be5ff6.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport './index.css';\r\nimport { connect, Provider } from 'react-redux'\r\n\r\n//Redux\r\nconst MESSAGES = 'MESSAGES',\r\n  RESULT = 'RESULT',\r\n  CLEAR = 'CLEAR';\r\n\r\nconst addMessage = message => ({\r\n  type: MESSAGES,\r\n  message\r\n});\r\n\r\nconst addResult = () => ({\r\n  type: RESULT\r\n});\r\n\r\nconst clear = () => ({\r\n  type: CLEAR\r\n});\r\n\r\nconst INTIAL_STATE = ({\r\n  messages: [], // store operators and numbers\r\n  result: 0,\r\n  parser: '' //--123+ parse to messages:['-', '-123'], parser: '+'\r\n});\r\n\r\n\r\nconst calculatorReducer = (state = INTIAL_STATE, action) => {\r\n  let messages = [...state.messages];\r\n  let parser = state.parser;\r\n  switch (action.type) {\r\n    case MESSAGES:\r\n      if (messages.includes('=') && state.result !== 0) {\r\n        messages = [state.result];\r\n      }\r\n      parser += action.message;\r\n      //reset to last operator (case: +/* followed by any operator, or - followed by +*/)\r\n      if (/^[+/*-][+/*]/.test(parser)) {\r\n        parser = parser.substr(1);\r\n        //reset to last operator (case: -- foloweed by any operator)\r\n      } else if (/^[+*/-]-[+/*-]/.test(parser)) {\r\n        parser = parser.substr(2);\r\n      } else if (! /\\d+[+*/-]$/.test(parser)) {\r\n        // hanlde multiple zeros in beging of a number, allow 0. for float\r\n        if (/^[+*/]?-?0+$/.test(parser)) {\r\n          parser = parser.replace(/0+/, '0');\r\n        } else if (/^[+*/]?-?0+[1-9]$/.test(parser)) {\r\n          parser = parser.replace(/0+/, '');\r\n        }\r\n        // only show one dot for float number\r\n        if ((parser.match(/\\./g) || []).length > 1) {\r\n          parser = parser.substring(0, parser.length - 1);\r\n        }\r\n      } else {\r\n        //meet condition for parsing, ends with at least one digit and an operator\r\n        //at the very beginng, there might not be an operator in parser\r\n        if (/^[+/*-]/.test(parser)) {\r\n          messages.push(parser.charAt(0));\r\n          parser = parser.substring(1); //consume operator, '--1.23+' => '-1.23+' , messages:['-']\r\n        }\r\n        //continue consume parser number part, messages: ['-',-1.23], parser: '+'\r\n        if (parser.includes('.')) {\r\n          messages.push(parseFloat(parser.substring(0, parser.length - 1)));\r\n        } else {\r\n          messages.push(parseInt(parser.substring(0, parser.length - 1)));\r\n        }\r\n        //update parser for next parse\r\n        parser = parser.substring(parser.length - 1);\r\n      }\r\n      return { ...state, messages: messages, parser: parser, result: parser };\r\n    case RESULT:\r\n      //consume remaining parser if any\r\n      if (/^[+*/-]/.test(parser)) {\r\n        messages.push(parser.charAt(0));\r\n        parser = parser.substring(1);\r\n        if (parser.length > 0) {\r\n          if (parser.includes('.')) {\r\n            messages.push(parseFloat(parser));\r\n          } else {\r\n            messages.push(parseInt(parser));\r\n          }\r\n          parser = '';\r\n        }\r\n      }\r\n      // if there is no left hand for first operator in array, use 0\r\n      if (typeof messages[0] !== 'number') {\r\n        messages.unshift(0);\r\n      }\r\n      //calulate result Formula/Expression Logic\r\n      if (messages.length <= 1) return state;\r\n      if (/^[*/]/.test(messages[0])) return state; //click AC to fix the formular no left\r\n      console.log(messages);\r\n      let reducer = [...messages];\r\n      //TODO first order * or /\r\n      while (reducer.includes('*') || reducer.includes('/')) {\r\n        let i = 1;\r\n        while (i < reducer.length) {\r\n          if (/[*|/]/.test(reducer[i])) {\r\n            let left = reducer[i - 1];\r\n            let operator = reducer[i];\r\n            if (i + 1 === reducer.length) {\r\n              reducer.splice(i - 1, 2, left)\r\n              break;\r\n            } else {\r\n              let right = reducer[i + 1];\r\n              let result = operator === '*' ? Math.round(left * right * 10000) / 10000 : Math.round(left / right * 10000) / 10000;\r\n              reducer.splice(i - 1, 3, result)\r\n            }\r\n          }\r\n          i++;\r\n          console.log('reduced', reducer);\r\n        }\r\n      }\r\n      //TODO second order + or -\r\n      while (reducer.includes('+') || reducer.includes('-')) {\r\n        let i = 1;\r\n        while (i < reducer.length) {\r\n          if (/[+|-]/.test(reducer[i])) {\r\n            let left = reducer[i - 1];\r\n            let operator = reducer[i];\r\n            if (i + 1 === reducer.length) {\r\n              reducer.splice(i - 1, 2, left)\r\n              break;\r\n            } else {\r\n              let right = reducer[i + 1];\r\n              let result = operator === '+' ? Math.round((left + right) * 10000) / 10000 : Math.round((left - right) * 10000) / 10000;\r\n              reducer.splice(i - 1, 3, result)\r\n            }\r\n          }\r\n          i++;\r\n          console.log('reduced', reducer);\r\n        }\r\n      }\r\n      let result = reducer.reduce((total, num) => { total += num; return total; }, 0);\r\n      messages.push('=', result); // workaround, click AC to recalculator\r\n      parser = '';\r\n      return { ...state, messages: messages, parser: parser, result: result };\r\n    case CLEAR:\r\n      return INTIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: state.messages,\r\n    result: state.result,\r\n    parser: state.parser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNewMessage: message => { dispatch(addMessage(message)) },\r\n    updateResult: () => { dispatch(addResult()) },\r\n    reset: () => { dispatch(clear()) }\r\n  }\r\n}\r\n\r\n//React\r\nclass Presentational extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetHandler = this.resetHandler.bind(this);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.clickEqualsHandler = this.clickEqualsHandler.bind(this);\r\n  }\r\n\r\n  resetHandler = () => {\r\n    this.props.reset();\r\n  }\r\n\r\n  clickHandler = e => {\r\n    this.props.addNewMessage(e.target.value);\r\n  }\r\n\r\n  clickEqualsHandler = () => {\r\n    this.props.updateResult();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className='box-group'>\r\n          <div className=\"screen\">\r\n            <div id=\"formula\">{this.props.messages.join(\"\") + this.props.parser}</div>\r\n            <div id=\"display\">{this.props.result}</div>\r\n          </div>\r\n          <button id=\"clear\" onClick={this.resetHandler}>AC</button>\r\n          <button id=\"divide\" onClick={this.clickHandler} value=\"/\">/</button>\r\n          <button id=\"multiply\" onClick={this.clickHandler} value=\"*\">*</button>\r\n\r\n          <button id=\"seven\" onClick={this.clickHandler} value=\"7\">7</button>\r\n          <button id=\"eight\" onClick={this.clickHandler} value=\"8\">8</button>\r\n          <button id=\"nine\" onClick={this.clickHandler} value=\"9\">9</button>\r\n          <button id=\"add\" onClick={this.clickHandler} value=\"+\">+</button>\r\n\r\n          <button id=\"four\" onClick={this.clickHandler} value=\"4\">4</button>\r\n          <button id=\"five\" onClick={this.clickHandler} value=\"5\">5</button>\r\n          <button id=\"six\" onClick={this.clickHandler} value=\"6\">6</button>\r\n          <button id=\"subtract\" onClick={this.clickHandler} value=\"-\">-</button>\r\n\r\n          <button id=\"one\" onClick={this.clickHandler} value=\"1\">1</button>\r\n          <button id=\"two\" onClick={this.clickHandler} value=\"2\">2</button>\r\n          <button id=\"three\" onClick={this.clickHandler} value=\"3\">3</button>\r\n\r\n          <button id=\"equals\" onClick={this.clickEqualsHandler}>=</button>\r\n          <button id=\"zero\" onClick={this.clickHandler} value=\"0\">0</button>\r\n          <button id=\"decimal\" onClick={this.clickHandler} value=\".\">.</button>\r\n        </div>\r\n        <p>Coded by Yong Xia <a href=\"https://github.com/yongxia/js-calculator\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fa fa-github\"></i> Github</a></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//react-dedux\r\nconst store = createStore(calculatorReducer, devToolsEnhancer());\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Presentational);\r\n\r\nclass CalculatorWrapper extends React.Component {\r\n  render = () => (\r\n    <Provider store={store}>\r\n      <Container />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(<CalculatorWrapper />, document.getElementById('root'))"],"sourceRoot":""}